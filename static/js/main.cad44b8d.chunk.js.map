{"version":3,"sources":["components/SearchForm.js","black-heart.svg","black-heart-not-filled.svg","components/Weather.js","App.js","index.js"],"names":["SearchForm","props","onSubmit","getWeather","className","name","placeholder","type","id","Weather","city","isFavorite","onClick","toggleFavorite","src","favImage","alt","title","notFavImage","temperature","humidity","icon","App","useState","weather","setWeather","search","fetch","then","res","ok","json","isNotFound","isVisible","Error","data","main","Math","round","temp","currentIsFavorite","catch","error","console","log","localStorage","getItem","useEffect","e","target","value","preventDefault","removeItem","setItem","ReactDOM","render","document","getElementById"],"mappings":"sOAWeA,EATI,SAACC,GAClB,OACE,uBAAMC,SAAUD,EAAME,WAAYC,UAAU,iBAA5C,UACE,uBAAOC,KAAK,OAAOC,YAAY,iBAAiBC,KAAK,WACrD,wBAAQC,GAAG,aAAX,6BCNS,MAA0B,wCCA1B,MAA0B,mDC0C1BC,EAtCC,SAACR,GACb,OACE,sBAAKG,UAAU,OAAf,UACE,sBAAKA,UAAU,YAAf,UACE,6BAAKH,EAAMS,OACX,qBACEN,UAAWH,EAAMU,WAAa,UAAY,cAC1CC,QAASX,EAAMY,eACfC,IAAKC,EACLC,IAAI,GACJC,MAAM,2DAGR,qBACEb,UAAWH,EAAMU,WAAa,cAAgB,UAC9CC,QAASX,EAAMY,eACfC,IAAKI,EACLF,IAAI,GACJC,MAAM,8DAIV,sBAAKb,UAAU,eAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,+BAAOH,EAAMkB,cADf,WAGA,qBAAKf,UAAU,qBAAf,SAAqCH,EAAMI,OAC3C,sBAAKD,UAAU,gBAAf,uBACY,+BAAOH,EAAMmB,WADzB,UAIF,qBAAKhB,UAAU,eAAeU,IAAKb,EAAMoB,KAAML,IAAKf,EAAMI,cCwDrDiB,G,MAvFH,WAER,IACA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAQMC,EAAS,SAAChB,GACTA,EAIHiB,MAAM,qDAAD,OACkDjB,EADlD,+BAdO,qCAiBTkB,MAAK,SAACC,GACL,GAAIA,EAAIC,GACN,OAAOD,EAAIE,OAGX,MADAN,EAAW,2BAAKD,GAAN,IAAeQ,YAAY,EAAMC,WAAW,KAChDC,MAAM,iBAGfN,MAAK,SAACO,GACLV,EAAW,CACTf,KAAMyB,EAAK9B,KACXA,KAAM8B,EAAKX,QAAQ,GAAGY,KACtBjB,YAAakB,KAAKC,MAAMH,EAAKC,KAAKG,MAClCnB,SAAUe,EAAKC,KAAKhB,SACpBC,KAAK,oCAAD,OAAsCc,EAAKX,QAAQ,GAAGH,KAAtD,WACJY,WAAW,EACXD,YAAY,EACZrB,WAAY6B,EAAkB9B,QAGjC+B,OAAM,SAACC,GACNC,QAAQC,IAAIF,MA3BhBC,QAAQC,IAAI,qFAyCVJ,EAAoB,SAAC9B,GACvB,OAAOmC,aAAaC,QAAQ,cAAgBpC,GAShD,OANAqC,qBAAU,WACmC,OAArCF,aAAaC,QAAQ,aACrBpB,EAAOmB,aAAaC,QAAQ,eAEjC,IAGD,sBAAK1C,UAAU,cAAf,UACE,6CACA,sBAAKA,UAAU,MAAf,UACE,cAAC,EAAD,CAAYD,WA/DC,SAAC6C,GAClB,IAAItC,EAAOsC,EAAEC,OAAOvC,KAAKwC,MACzBxB,EAAOhB,GACPsC,EAAEG,oBA6DG3B,EAAQS,UACP,cAAC,EAAD,CACEvB,KAAMc,EAAQd,KACdL,KAAMmB,EAAQnB,KACdc,YAAaK,EAAQL,YACrBC,SAAUI,EAAQJ,SAClBC,KAAMG,EAAQH,KACdV,WAAYa,EAAQb,WACpBE,eAhCa,WAChB2B,EAAkBhB,EAAQd,MAG7BmC,aAAaO,WAAW,YAFxBP,aAAaQ,QAAQ,WAAY7B,EAAQd,MAI3Ce,EAAW,2BAAKD,GAAN,IAAeb,YAAaa,EAAQb,iBA4BtC,QAELa,EAAQQ,WAAa,mBAAG5B,UAAU,QAAb,+BAA6C,UCjF3EkD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cad44b8d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst SearchForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.getWeather} className=\"search-wrapper\">\r\n      <input name=\"city\" placeholder=\"Type to search\" type=\"search\" />\r\n      <button id=\"search-btn\">Get weather</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchForm","export default __webpack_public_path__ + \"static/media/black-heart.65fd89b2.svg\";","export default __webpack_public_path__ + \"static/media/black-heart-not-filled.9ba73007.svg\";","import React from \"react\";\r\nimport favImage from '../black-heart.svg'\r\nimport notFavImage from '../black-heart-not-filled.svg'\r\n\r\nconst Weather = (props) => {\r\n    return (\r\n      <div className=\"city\">\r\n        <div className=\"city-name\">\r\n          <h2>{props.city}</h2>\r\n          <img\r\n            className={props.isFavorite ? \"display\" : \"not-display\"}\r\n            onClick={props.toggleFavorite}\r\n            src={favImage}\r\n            alt=\"\"\r\n            title=\"Избранное\"\r\n          />\r\n\r\n          <img\r\n            className={props.isFavorite ? \"not-display\" : \"display\"}\r\n            onClick={props.toggleFavorite}\r\n            src={notFavImage}\r\n            alt=\"\"\r\n            title=\"Избранное\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"city-weather\">\r\n          <div className=\"city-weather-descr\">\r\n            <div className=\"city-temperature\">\r\n              <span>{props.temperature}</span>°C\r\n            </div>\r\n            <div className=\"city-weather-state\">{props.name}</div>\r\n            <div className=\"city-humidity\">\r\n              Humidity: <span>{props.humidity}</span>%\r\n            </div>\r\n          </div>\r\n          <img className=\"weather-icon\" src={props.icon} alt={props.name} />\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Weather;","import React, { useEffect, useState } from 'react'\r\nimport SearchForm from './components/SearchForm.js'\r\nimport Weather from './components/Weather.js'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n\r\n    const API_KEY = \"ff9d437b8a5c1fdf6bc59832839e29b8\";\r\n    const [weather, setWeather] = useState({})\r\n\r\n    const getWeather = (e) => {\r\n      let city = e.target.city.value;\r\n      search(city);\r\n      e.preventDefault();\r\n    };\r\n\r\n    const search = (city) => {\r\n      if (!city) {\r\n        console.log(\"Город не найден\")\r\n        return \r\n      } else {\r\n        fetch(\r\n          `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`\r\n        )\r\n          .then((res) => {\r\n            if (res.ok) {\r\n              return res.json();\r\n            } else {\r\n              setWeather({ ...weather, isNotFound: true, isVisible: false });\r\n              throw Error(\"Wrong city\");\r\n            }\r\n          })\r\n          .then((data) => {\r\n            setWeather({\r\n              city: data.name,\r\n              name: data.weather[0].main,\r\n              temperature: Math.round(data.main.temp),\r\n              humidity: data.main.humidity,\r\n              icon: `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`,\r\n              isVisible: true,\r\n              isNotFound: false,\r\n              isFavorite: currentIsFavorite(city),\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error)\r\n          });\r\n        }\r\n    }\r\n\r\n    const toggleFavorite = () => {\r\n      if (!currentIsFavorite(weather.city)) {\r\n        localStorage.setItem(\"userCity\", weather.city)\r\n      } else {\r\n        localStorage.removeItem(\"userCity\")\r\n      }\r\n      setWeather({ ...weather, isFavorite: !weather.isFavorite })\r\n    }\r\n\r\n    const currentIsFavorite = (city) => {\r\n        return localStorage.getItem(\"userCity\") === city\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"userCity\") !== null){\r\n            search(localStorage.getItem(\"userCity\"))\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <h1>Weather App</h1>\r\n        <div className=\"app\">\r\n          <SearchForm getWeather={getWeather} />\r\n          {weather.isVisible ? (\r\n            <Weather\r\n              city={weather.city}\r\n              name={weather.name}\r\n              temperature={weather.temperature}\r\n              humidity={weather.humidity}\r\n              icon={weather.icon}\r\n              isFavorite={weather.isFavorite}\r\n              toggleFavorite={toggleFavorite}\r\n            />\r\n          ) : null}\r\n        </div>\r\n        {weather.isNotFound ? <p className=\"error\">City wasn't found</p> : null}\r\n      </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}